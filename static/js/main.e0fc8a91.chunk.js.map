{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","label","split","length","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","Ntext","join","document","getElementById","select","navigator","clipboard","writeText","slice","defaultProps","Alert","alert","class","role","word","lower","charAt","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0fc8a91.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n// import Aboutus from './Aboutus'  \r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n<>\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/Textform\">{props.title}</Link> */}\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/Textform\">Home</a>\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/Aboutus\">About Us</Link>\r\n          </li> */}\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        \r\n    </div>\r\n  </div>\r\n</nav>\r\n<div className=\"row\">\r\n  <p className=\"col-sm-9 \"></p>\r\n<div className={`form-check form-switch text-${props.mode ==='light'?'dark':'light'} col-sm-3`}>\r\n          <input className=\"form-check-input align-right \" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode ==='light'?\"Enable Dark Mode\":\"Enable Light Mode\"}</label>\r\n        </div>\r\n        </div>\r\n</>\r\n    )\r\n}\r\nNavbar.propTypes={title: PropTypes.string,}\r\n\r\nNavbar.defaultProps ={\r\n    title: 'set title here',\r\n}","import React, {useState} from 'react'\r\n// import validator from  'validator'\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n  \r\n\r\n  const handleUpClick = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to Upper Case\", \"success\");\r\n  }\r\n\r\n  const handleFUpClick = ()=>{\r\n    let newText = text.slice(0,1).toUpperCase()+text.slice(1,text.length);\r\n    setText(newText)\r\n    props.showAlert(\"Converted to First Letter Upper Case\", \"success\");\r\n  }\r\n  \r\n  const handleLowClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to Lower Case\", \"success\");\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById('textutilsAria');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipbord\", \"success\");\r\n    }\r\n\r\n  const handleExtraSpaces = () => {\r\n      let Ntext = text.split(/[ ]+/);\r\n      setText(Ntext.join(\" \"))\r\n      props.showAlert(\"Extra Space has been Removed \", \"success\");\r\n  }\r\n\r\n  const handleClear=()=>{\r\n    let newText =\"\";\r\n    setText(newText)\r\n    props.showAlert(\"Text Cleared \", \"success\");\r\n  }\r\n       \r\n\r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text, setText]= useState('');\r\n    return (\r\n  <>\r\n    <div className=\"container\" style={{color:props.mode === 'dark'?'white':'black'}}>\r\n      <div className=\"row my-4\">\r\n        <div className=\"mb-3 my-2 col-sm-8\">\r\n          <div className=\" row\">\r\n            <label label htmlFor=\"exampleFormControlTextarea1\" className=\"form-labe col-sm-5\"><h1>Text Utility</h1></label>\r\n            <p className=\"col-sm-4\"><b>{text.split(\" \").length}</b> Words and <b>{text.length}</b> characters</p>\r\n            <p className=\"col-sm-3\"><b>{0.008*text.split(\" \").length} </b>Minuts Read</p>\r\n          </div>\r\n            <textarea className=\"form-control\" value={text} style={{color:props.mode === 'dark'?'white':'black', backgroundColor:props.mode === 'dark'?'#495057':'#e8edf3'}} onChange={handleOnChange} id=\"textutilsAria\" rows=\"7\" placeholder=\"Enter Text Here....\"></textarea>\r\n        </div>\r\n        <div className=\" my-2 col-sm-4\">\r\n          <h1>Preview</h1>\r\n          <p>{text.length>0?text:\"Enter text in the textbox to preview it here.....\"}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\" row \">\r\n        <div className=\"my-2 col-sm-8\">\r\n          <button className=\"btn btn-info\" onClick={handleUpClick}>All Uppercase</button>\r\n          <button className=\"btn btn-info mx-2\" onClick={handleLowClick}>Lowercase</button>\r\n          <button className=\"btn btn-info mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n          <button className=\"btn btn-info mx-2\" onClick={handleCopy}>Copy Text</button>\r\n          \r\n        </div>\r\n        <div className=\" col-sm-8\">\r\n          <button className=\"btn btn-info\" onClick={handleFUpClick}>First Letter Uppercase</button>  \r\n           <button className=\"btn btn-info mx-2\" onClick={handleClear}>Clear Text</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}!</strong> {props.alert.msg}...\r\n                \r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import Aboutus from './components/Aboutus';\n\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert =(message, type)=>{\n      setAlert({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#495057'\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{ \n    setMode('light');\n    document.body.style.backgroundColor='#e8edf3'\n    showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n  < >\n  {/* <Router> */}\n   <Navbar title=\"Bloger\" mode ={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   {/* <Switch> */}\n          {/* <Route exact path=\"/aboutus\"> */}\n           {/* <Aboutus/> */}\n          {/* </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n          <Textform mode={mode} showAlert={showAlert}/> \n          {/* </Route> */}\n        {/* </Switch> */}\n       \n   {/* </Router> */}\n \n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}